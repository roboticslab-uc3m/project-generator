language: cpp
dist: trusty
os: linux
compiler: gcc

env:
  global:
    - YARP_VER=2.3.72.1
    - YARP_CACHE_DIR=~/.yarp

cache:
  directories:
    - $YARP_CACHE_DIR

before_install:
  - sudo apt-get -qq update
  - sudo apt-get -y --no-install-recommends install doxygen # libcurl4-openssl-dev (already available in Travis CI environment)
  - if [ ! $(git config --get user.email) ]; then $(git config --global user.email 'user@example.com'); fi
  - if [ ! $(git config --get user.name) ]; then $(git config --global user.name 'Travis CI'); fi

install:
  # Clone and build YARP if not in cache
  - >-
    if [ ! "$(ls -A "$YARP_CACHE_DIR")" ] || [ ! -f "$YARP_CACHE_DIR/.version" ] || [ ! $(cat "$YARP_CACHE_DIR/.version") = "$YARP_VER" ]; then
      echo "YARP not in cache or wrong version"
      rm -rf "$YARP_CACHE_DIR/*"
      cd
      wget -qO- "https://github.com/robotology/yarp/archive/v$YARP_VER.tar.gz" | tar xz
      mkdir -p "yarp-$YARP_VER/build" && cd "$_"
      cmake .. -DCMAKE_INSTALL_PREFIX:PATH="$YARP_CACHE_DIR" -DSKIP_ACE:BOOL=ON
      sudo make -j$(nproc) install
      echo "$YARP_VER" > "$YARP_CACHE_DIR/.version"
    else
      echo "YARP directory found in cache (version $(cat "$YARP_CACHE_DIR/.version"))"
    fi

  # Make installed YARP discoverable by CMake's find_package() command
  - export YARP_DIR=$YARP_CACHE_DIR/lib/cmake/YARP

before_script:
  - cd $TRAVIS_BUILD_DIR
  - ./project-generator.sh < test_program_answers.txt
  - cd $(tail -n 1 test_program_answers.txt)

script:
  - ./scripts/package/make_package.sh
